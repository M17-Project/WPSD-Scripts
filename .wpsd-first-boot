#!/bin/bash

if [ "$(id -u)" != "0" ]; then
  echo -e "You need to be root to run this command...\n"
  exit 1
fi

source /usr/local/sbin/.wpsd-common-funcs

if [ -f /boot/.WPSD_Booted ] ; then
    exit 1 # already updated on initial bootup
fi

# connectivity check
status_code=$(curl -m 6 -A "ConnCheck (WPSD-First-Boot-Tasks) ${uaStr}" --write-out %{http_code} --silent --output /dev/null "${CONN_CHECK_URI}")
if [[ $status_code == 20* ]] || [[ $status_code == 30* ]] ; then

    systemctl stop wpsd-nightly-tasks.timer > /dev/null 2>&1
    systemctl stop wpsd-running-tasks.timer > /dev/null 2>&1

    pkill .wpsd-running-tasks > /dev/null 2>&1
    pkill .wpsd-nightly-tasks > /dev/null 2>&1
    pkill .wpsd-slipstream-tasks > /dev/null 2>&1

    wpsd-services fullstop > /dev/null 2>&1

    cd /usr/local/sbin
    git update-index --no-assume-unchanged pistar-upnp.service # get rid of legacy index not that upnp rules are in /etc/wpsd-upnp-rules
    env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (WPSD-First-Boot-Tasks) Ver.# ${dashVer} (${gitBranch}) Call:${CALL} UUID:${uuidStr} [${osName}]" git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git reset --hard origin/master
    env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (WPSD-First-Boot-Tasks) Ver.# ${dashVer} (${gitBranch}) Call:${CALL} UUID:${uuidStr} [${osName}]" git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git pull origin master

    gitFolder="/var/www/dashboard"
    gitBranch="$( git --git-dir=${gitFolder}/.git symbolic-ref --short HEAD )"
    cd ${gitFolder}
    env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (WPSD-First-Boot-Tasks) Ver.# ${dashVer} (${gitBranch}) Call:${CALL} UUID:${uuidStr} [${osName}]" git --work-tree=/var/www/dashboard --git-dir=/var/www/dashboard/.git pull origin ${gitBranch}

    branch="master"
    GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (WPSD-First-Boot-Tasks) Ver.# ${dashVer} (${gitBranch}) Call:${CALL} UUID:${uuidStr} [${osName}]" git --work-tree=/usr/local/bin --git-dir=/usr/local/bin/.git pull origin "${branch}"

    # dvmega cast-specific stuff
    castResult=$(isDVmegaCast)
    if [ "$castResult" == "true" ]; then
        branch="master"
	cd /opt/cast
	git reset --hard origin/master
	GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (WPSD-First-Boot-Tasks) Ver.# ${dashVer} (${gitBranch}) Call:${CALL} UUID:${uuidStr} [${osName}]" git --work-tree=/opt/cast --git-dir=/opt/cast/.git pull origin "${branch}"
	git reset --hard origin/master
    fi

    /usr/local/sbin/wpsd-hostfile-update & > /dev/null 2>&1

    # Get and cache latest WPSD Web Code version from remote Git repo:
    gitRemoteURL=$(git --work-tree=${gitFolder} --git-dir=${gitFolder}/.git config --get remote.origin.url)
    gitBranch="$( git --git-dir=${gitFolder}/.git symbolic-ref --short HEAD )"
    gitStatusRemote=$(env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck Version Cacher (WPSD-First-Boot-Tasks) Ver.# ${dashVer} (${gitBranch}) Call:${CALL} UUID:${uuidStr} [${osName}]" git ls-remote --heads ${gitRemoteURL} ${gitBranch} | grep ${gitBranch} | awk {'print $1'} | awk '{ print substr($1,1,10) }') # last pipe to awk: converts long hash to 10 chars.
    echo ${gitStatusRemote} > /etc/.WPSD_remote_version

    touch /boot/.WPSD_Booted

    # maint. tasks
    /usr/local/sbin/.wpsd-backend-maint > /dev/null 2>&1

    /usr/local/sbin/.wpsd-sys-cache >/dev/null 2>&1

    wpsd-services start & > /dev/null 2>&1

    /usr/local/sbin/.wpsd-slipstream-tasks > /dev/null 2>&1

    systemctl start wpsd-nightly-tasks.timer > /dev/null 2>&1
    systemctl start wpsd-running-tasks.timer > /dev/null 2>&1
fi

exit 0

