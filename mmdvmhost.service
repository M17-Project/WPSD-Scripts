#!/bin/bash
#########################################################
#                                                       #
#              MMDVMHost Service Handler                #
#                                                       #
#########################################################

# Service Config
DAEMON=MMDVMHost
DAEMON_PATH=/usr/local/bin/
CONFIG=/etc/mmdvmhost
DAEMON_OPTS=$CONFIG
PGREP=/usr/bin/pgrep
KILL=/bin/kill
SLEEP=/bin/sleep
USER=root
GROUP=mmdvm
LOGDIR=/var/log/pi-star

source /usr/local/sbin/.wpsd-common-funcs

# Pre-flight checks...
test -x ${DAEMON_PATH}${DAEMON} || exit 0
test -r $CONFIG || exit 0
# If we're unconfigured, put a message on the displays
# Thanks Andy!
if [[ ! -f /etc/dstar-radio.mmdvmhost ]]; then
  if [ -e /usr/local/sbin/.wpsd-nextion-text.py ]; then
    /usr/local/sbin/.wpsd-nextion-text.py -c 2>/dev/null
    /usr/local/sbin/.wpsd-nextion-text.py t0 "WPSD" 2>/dev/null
    /usr/local/sbin/.wpsd-nextion-text.py t1 "Not Configured Yet" 2>/dev/null
  fi
  if [ -e /usr/local/sbin/.wpsd-oled.text.py ]; then
    /usr/local/sbin/.wpsd-oled.text.py -c 2>/dev/null
    /usr/local/sbin/.wpsd-oled.text.py --text1 "WPSD" --text2 "Not Configured Yet" > /dev/null 2>&1
  fi
  exit 0
fi
test -r /etc/dstar-radio.mmdvmhost || exit 0

# Verify the logging directory exists, if not create it and setup the ownership / permissions
if [ ! -d $LOGDIR ]; then
  mkdir -p $LOGDIR
  chown ${USER}:${GROUP} $LOGDIR
  chmod 775 $LOGDIR
fi

case "$1" in
	start)
		if [ `${PGREP} ${DAEMON}` ]; then
			echo -e "$DAEMON is already running as PID "`$PGREP $DAEMON`
			exit 0;
		else
			# Wait for an IP address
			while ! interface_has_ip; do
			    sleep 5
			done
                        chown -R ${GROUP}:${GROUP} $LOGDIR
                        chmod 775 $LOGDIR
			sleep 5
			nice -n -10 ${DAEMON_PATH}${DAEMON} ${DAEMON_OPTS}
			echo -e "$DAEMON started as PID "`$PGREP $DAEMON`
			(sleep 3s; systemctl start ircddbgateway)&
			exit 0;
		fi
		;;

	stop)
		if [ `${PGREP} ${DAEMON}` ]; then
			echo -e "Killing $DAEMON PID "`$PGREP $DAEMON`
			$KILL `${PGREP} ${DAEMON}`
			systemctl stop ircddbgateway

			exit 0;
		else
			echo -e "$DAEMON is not running"
			exit 0;
		fi
		;;

	restart)
		if [ `$PGREP $DAEMON` ]; then
			echo -e "Killing $DAEMON PID "`$PGREP $DAEMON`
			$KILL `${PGREP} ${DAEMON}`
			$SLEEP 3
                        chown -R ${GROUP}:${GROUP} $LOGDIR
                        chmod 775 $LOGDIR
			sleep 5
			nice -n -10 ${DAEMON_PATH}${DAEMON} ${DAEMON_OPTS}
			echo -e "$DAEMON re-started as PID "`${PGREP} ${DAEMON}`
			(sleep 3s; systemctl restart ircddbgateway)&
			exit 0;
		else
			echo -e "$DAEMON is not running"
                        chown -R ${GROUP}:${GROUP} $LOGDIR
                        chmod 775 $LOGDIR
			sleep 5
			nice -n -10 ${DAEMON_PATH}${DAEMON} ${DAEMON_OPTS}
			echo -e "$DAEMON re-started as PID "`${PGREP} ${DAEMON}`
			(sleep 3s; systemctl restart ircddbgateway)&
			exit 0;
		fi
		;;

	status)
		if [ `${PGREP} ${DAEMON}` ]; then
			echo -e "$DAEMON is running as PID "`${PGREP} ${DAEMON}`
		else
			echo -e "$DAEMON is not running"
		fi
		;;

	*)
		echo $"Usage: $0 {start|stop|restart|status}"
		exit 0
esac
