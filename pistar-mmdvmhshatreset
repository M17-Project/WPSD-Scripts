#!/bin/bash
#
##############################################################################
#                                                                            #
#                        WPSD MMDVM HS_HAT Reset Tool                        #
#            Makes it simple to reset an MMDVM board from the CLI            #
#                                                                            #
##############################################################################
#
if [ "$(id -u)" != "0" ]; then
  echo -e "You need to be root to run this command...\n"
  exit 1
fi

# Special Pi4/5 handling...
# Detect Pi4/5 Hardware
if [ "$(/usr/local/sbin/platformDetect.sh | grep "Pi 4 Model" | wc -l)" -ge 1 ]; then
  model="Pi4"
elif [ "$(/usr/local/sbin/platformDetect.sh | grep "Pi 5 Model" | wc -l)" -ge 1 ]; then
  model="Pi5"
else
  model=""
fi
# Make the "boot" option only work on Pi 4/5 hardware, due to GPIO changes in the boards.
# The "boot" arg. leaves mmdvmhost services alone since they have not started yet and we
# need the pi4/5 GPIO pins to init before MMDVMHost. No "boot" option is for when MMDVMhost
# is started/running after boouo
if [ "${1}" = "boot" ]; then
  if [ "${model}" != "Pi4" ] && [ "${model}" != "Pi5" ]; then
    echo "The 'boot' option only works with Pi 4 and Pi 5 boards. Try again without the 'boot' option."
    exit 1
  fi
fi

if [ -f '/etc/dstar-radio.mmdvmhost' ]; then
    modemSelected=$(grep 'Hardware=' /etc/dstar-radio.mmdvmhost)
    modemSelected=${modemSelected#*=}

    # Get the user-friendly version of the selected Modem.
    modemSelectedHuman=$(grep value=\"${modemSelected}\" /var/www/dashboard/admin/configure.php | head -n 1)
    modemSelectedHuman=${modemSelectedHuman#*\">}
    modemSelectedHuman=${modemSelectedHuman::-9}

    # Replace "&amp;" with "&" in modemSelectedHuman
    modemSelectedHuman=${modemSelectedHuman//&amp;/&}
fi

# Get the Port the modem is on
modemPort=$(sed -n '/^\[Modem\]/,/^\[/p' /etc/mmdvmhost | grep ^"UARTPort" | awk -F '=' '{print $2}')
if [ -z "${modemPort}" ]; then
  modemPort=$(sed -n '/^\[Modem\]/,/^\[/p' /etc/mmdvmhost | grep ^"Port" | awk -F '=' '{print $2}')
fi
if [ -z "${modemPort}" ] || [ "${modemPort}" != "/dev/ttyAMA0" ]; then
  echo -e "Your Modem is not connected to the GPIO"
  exit 0
fi

# If there are no arguments (like "boot") then stop the service...
if [ -z "${1}" ]; then
  echo -e "Resetting Modem: ${modemSelectedHuman}"
  systemctl stop mmdvmhost.timer
  systemctl stop mmdvmhost.service
fi

# Reset process for MMDVM HS_HAT Board (20,-21,21:-20,21)
echo 20 > /sys/class/gpio/export
echo 21 > /sys/class/gpio/export
echo out > /sys/class/gpio/gpio20/direction
echo out > /sys/class/gpio/gpio21/direction
sleep 0.5
echo 0 > /sys/class/gpio/gpio20/value
echo 0 > /sys/class/gpio/gpio21/value
echo 1 > /sys/class/gpio/gpio21/value
sleep 1
echo 0 > /sys/class/gpio/gpio20/value
echo 1 > /sys/class/gpio/gpio20/value
echo 0 > /sys/class/gpio/gpio20/value
sleep 0.5
echo 20 > /sys/class/gpio/unexport
echo 21 > /sys/class/gpio/unexport
sleep 2
message="Modem reset complete"

# If there are no arguments (like "boot") then start the service...
if [ -z "${1}" ]; then
  systemctl start mmdvmhost.service
  systemctl start mmdvmhost.timer
  echo -e ${message}
fi

exit 0
