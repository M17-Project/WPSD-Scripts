#!/bin/bash

#
# W0CHP pistar-daily.cron (enhanced) v2.4
#

# Make sure we are root
if [ "$(id -u)" != "0" ]; then
  echo -e "You need to be root to run this command...\n"
  exit 1
fi

# Add DGIdGateway timer to the APRS timer (dependency).
if ! grep -q 'Before=mmdvmhost.timer' /lib/systemd/system/aprsgateway.service ; then
    sed -i '/After=/a Before=mmdvmhost.timer ircddbgateway.timer ysfgateway.timer nxdngateway.timer dgidgateway.timer' /lib/systemd/system/aprsgateway.service
fi

W0CHP_BIN_REPO="https://repo.w0chp.net/Chipster/W0CHP-PiStar-bin.git"
OFFICIAL_BIN_REPO="https://github.com/AndyTaylorTweet/Pi-Star_v4_Binaries_Bin.git"
W0CHP_DASH_BRANCH="$( git --git-dir=/var/www/dashboard/.git branch | grep '*' | awk {'print $2'} )"
versionCmd=$( git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git rev-parse --short=10 HEAD )

sbinCheckUpdateRequired() {
        gitFolder="/usr/local/sbin"
        gitRemoteURL=$(git --work-tree=${gitFolder} --git-dir=${gitFolder}/.git config --get remote.origin.url)
        # Git check / update function
        gitStatusRemote=$(${gitVars}  git ls-remote --heads ${gitRemoteURL} | awk {'print $1'})
        gitStatusLocal=$(git --work-tree=${gitFolder} --git-dir=${gitFolder}/.git log ${gitBranch} --pretty=tformat:"%H" -1)
        # Return the output
        if [[ ${gitStatusRemote} != ${gitStatusLocal} ]]; then
                echo "1"
        else
                echo "0"
        fi
}

# Make the disk RW
mount -o remount,rw /

pkill pistar-hourly.cron > /dev/null 2>&1

# Update the Binaries (sbin)
env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (Daily-Cron) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git update-index --assume-unchanged pistar-upnp.service
# If this script is updated, re-run the update with the new version.
git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git reset --hard
env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (Daily-Cron) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git fetch
if [ "$(git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git diff --name-only origin/master | grep pistar-daily.cron)" = "pistar-daily.cron" ]; then
	echo "Found a new version of pistar-daily.cron..."
	env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (Daily-Cron) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git pull origin master
	git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git --no-pager log --no-decorate --pretty=oneline -n1 | cut --complement -d' ' -f1 | fold -w 76 -s
	if [[ $(sbinCheckUpdateRequired) -gt 0 ]]; then
		echo "Update to new version of pistar-update was not successful, forcing update..."
		if [ -f ${gitFolder}/pistar-upnp.service ]; then
			rm -f ${gitFolder}/pistar-upnp.service
		fi
		env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (Daily-Cron) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git --work-tree=${gitFolder} --git-dir=/usr/local/sbin/.git reset --hard origin/master
	fi
	echo -e "\n"
	echo -e "\nRestarting update process with the new version..."
	exec "$0" "$@"
	exit 1
fi
env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (Daily-Cron) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git pull origin master

# Update the Dashboard
# W0CHP has more than one branch. So depending on what W0CHP branch the user has installed, check that branch.
gitFolder="/var/www/dashboard"
gitBranch="$( git --git-dir=${gitFolder}/.git branch | grep '*' | awk {'print $2'} )"
cd ${gitFolder}
git stash # save user config files: config/config.php config/ircddblocal.php config/language.php
env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (Daily-Cron) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git --work-tree=/var/www/dashboard --git-dir=/var/www/dashboard/.git pull origin ${gitBranch}
git reset --hard
git checkout stash@{0} -- config/config.php config/ircddblocal.php config/language.php # restore user config files from stash
git stash clear # housekeeping

# Host Files Update
/usr/local/sbin/HostFilesUpdate.sh > /dev/null 2>&1

# Get and cache latest W0CHP-PiStar-Dash version from remote Git repo:
gitRemoteURL=$(git --work-tree=${gitFolder} --git-dir=${gitFolder}/.git config --get remote.origin.url)
gitBranch="$( git --git-dir=${gitFolder}/.git branch | grep '*' | awk {'print $2'} )"
gitStatusRemote=$(env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck Version Cacher (Daily-Cron) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git ls-remote --heads ${gitRemoteURL} ${gitBranch} | grep ${gitBranch} | awk {'print $1'} | awk '{ print substr($1,1,10) }') # last pipe to awk: converts long hash to 10 chars.
echo ${gitStatusRemote} > /etc/.W0CHP-PiStar-Dash.remote_version

# Generate /etc/motd
/usr/local/sbin/pistar-motdgen

# Stop all the services...
env REMOUNT_RO="NO" pistar-services fullstop > /dev/null 2>&1

# nextion/mmdvmhost fix
if grep -q nextion /lib/systemd/system/mmdvmhost.service ; then
    systemctl disable mmdvmhost.service  > /dev/null 2>&1
    rm -rf /lib/systemd/system/mmdvmhost.service
    systemctl disable nextiondriver.service  > /dev/null 2>&1
    rm -rf /lib/systemd/system/nextiondriver.service
    echo '[Unit]' > /lib/systemd/system/mmdvmhost.service
    echo 'Description=MMDVMHost Radio Service' >> /lib/systemd/system/mmdvmhost.service
    echo 'After=syslog.target network.target' >> /lib/systemd/system/mmdvmhost.service
    echo '' >> /lib/systemd/system/mmdvmhost.service
    echo '[Service]' >> /lib/systemd/system/mmdvmhost.service
    echo 'Type=forking' >> /lib/systemd/system/mmdvmhost.service
    echo 'ExecStart=/usr/local/sbin/mmdvmhost.service start' >> /lib/systemd/system/mmdvmhost.service
    echo 'ExecStop=/usr/local/sbin/mmdvmhost.service stop' >> /lib/systemd/system/mmdvmhost.service
    echo 'ExecReload=/usr/local/sbin/mmdvmhost.service restart' >> /lib/systemd/system/mmdvmhost.service
    echo '' >> /lib/systemd/system/mmdvmhost.service
    echo '[Install]' >> /lib/systemd/system/mmdvmhost.service
    echo 'WantedBy=multi-user.target' >> /lib/systemd/system/mmdvmhost.service
    systemctl enable mmdvmhost.service  > /dev/null 2>&1
    systemctl daemon-reload  > /dev/null 2>&1
fi

function GetBinStatus() {
    dir="/usr/local/bin"
    repo=$(git --work-tree=${dir} --git-dir=${dir}/.git config --get remote.origin.url)
    if [ "$repo" == "$OFFICIAL_BIN_REPO" ]; then
        echo "1" # bin switch needed
    else
        echo "0" # already on W0CHP bins
    fi
}

function BinRepoSwitch() {
    if [[ $(GetBinStatus) == 1 ]]; then # "1" = bin switch needed
        rm -rf /usr/local/bin
        GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (Daily-Cron; BinSwitch) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git clone  $W0CHP_BIN_REPO /usr/local/bin
        checkMMDVMhostINI=$(grep -A 15 "DMR Network" /etc/mmdvmhost | grep -v "DMR Network" | grep -v '^\d*$' | grep "RemoteAddress=127.0.0.1")
        if [[ ! ${checkMMDVMhostINI} ]] ; then
            sed -i '/\[DMR Network\]/a RemoteAddress=127.0.0.1' /etc/mmdvmhost # need this for new conf. dicts.
        fi
    fi
}

# check if bin repo switch is needed
BinRepoSwitch

# Update the Binaries
GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck (Daily-Cron) Ver.#${versionCmd} (${W0CHP_DASH_BRANCH})" git --work-tree=/usr/local/bin --git-dir=/usr/local/bin/.git pull origin master

# Purge the logs older than 2 days
rm -f $(find /var/log/pi-star/*.log -type f -mtime +2 -print)
rm -f $(find /var/log/ -type f -mtime +0 -print | grep .gz)

# Shrink NxinX error log to stop it getting out of hand
echo "$(tail -500 /var/log/nginx/error.log)" > /var/log/nginx/error.log

# Pre-Fix some config in MMDVMHost for update purposes.
mmdvmHostVer=`MMDVMHost -v | awk '{print $3}' | cut -c 1-8`
needsUpdate=`grep -c Gwy /etc/mmdvmhost`
if [ ${mmdvmHostVer} \> 20171031 ] && [ ${needsUpdate} \> 0 ]; then
        # Config needs to be updated, add in the changes here
        sed -i "/GwyAddress=/c\\GatewayAddress=127.0.0.1" /etc/mmdvmhost
        sed -i "/GwyPort=/c\\GatewayPort=4200" /etc/mmdvmhost
fi

# Fix up new P25Gateway Config Hostfile setup
if [[ $(/usr/local/bin/P25Gateway --version | awk '{print $3}' | cut -c -8) -gt "20180108" ]]; then
	sed -i 's/Hosts=\/usr\/local\/etc\/P25Hosts.txt/HostsFile1=\/usr\/local\/etc\/P25Hosts.txt\nHostsFile2=\/usr\/local\/etc\/P25HostsLocal.txt/g' /etc/p25gateway
fi
if [ ! -f /root/P25Hosts.txt ]; then
	touch /root/P25Hosts.txt
fi

# If we are ready to use the new DMRGateway
if [[ $(/usr/local/bin/DMRGateway --version | awk '{print $3}' | cut -c -8) -gt "20170924" ]] && [[ $(grep -c "\[DMR Network 3\]" /etc/dmrgateway) -eq "1" ]] && [[ ! -f /usr/local/etc/DMR_Audio/no_NO.indx ]]; then
	curl --fail -o /usr/local/etc/DMR_Audio/de_DE.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/de_DE.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/de_DE.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/de_DE.indx
	curl --fail -o /usr/local/etc/DMR_Audio/dk_DK.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/dk_DK.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/dk_DK.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/dk_DK.indx
	curl --fail -o /usr/local/etc/DMR_Audio/en_GB.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/en_GB.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/en_GB.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/en_GB.indx
	curl --fail -o /usr/local/etc/DMR_Audio/en_US.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/en_US.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/en_US.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/en_US.indx
	curl --fail -o /usr/local/etc/DMR_Audio/es_ES.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/es_ES.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/es_ES.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/es_ES.indx
	curl --fail -o /usr/local/etc/DMR_Audio/fr_FR.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/fr_FR.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/fr_FR.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/fr_FR.indx
	curl --fail -o /usr/local/etc/DMR_Audio/it_IT.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/it_IT.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/it_IT.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/it_IT.indx
	curl --fail -o /usr/local/etc/DMR_Audio/no_NO.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/no_NO.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/no_NO.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/no_NO.indx
	curl --fail -o /usr/local/etc/DMR_Audio/pl_PL.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/pl_PL.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/pl_PL.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/pl_PL.indx
	curl --fail -o /usr/local/etc/DMR_Audio/se_SE.ambe -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/se_SE.ambe
	curl --fail -o /usr/local/etc/DMR_Audio/se_SE.indx -s https://raw.githubusercontent.com/g4klx/DMRGateway/master/Audio/se_SE.indx	
fi

if [[ $(grep Version /etc/pistar-release | awk '{print $3}' | cut -c 1) -eq 4 ]]; then
        if [[ $(cat /etc/ircddbgateway | grep -o "xlx" | wc -l) -eq 0 ]]; then
                echo "xlxEnabled=0" >> /etc/ircddbgateway
                echo "xlxOverrideLocal=0" >> /etc/ircddbgateway
                echo "xlxHostsFileUrl=" >> /etc/ircddbgateway
        fi

        if [[ $(cat /etc/ircddbgateway | grep -o "aprsPassword" | wc -l) -eq 0 ]]; then
                echo "aprsPassword=00000" >> /etc/ircddbgateway
        fi

        if [[ $(cat /etc/ircddbgateway | grep -o "mobileGPS" | wc -l) -eq 0 ]]; then
                echo "mobileGPSEnabled=0" >> /etc/ircddbgateway
                echo "mobileGPSAddress=127.0.0.1" >> /etc/ircddbgateway
                echo "mobileGPSPort=7834" >> /etc/ircddbgateway
        fi

        if [[ $(cat /etc/dstarrepeater | grep -o "mmdvmRXInvert" | wc -l) -eq 0 ]]; then
                echo "mmdvmRXInvert=0" >> /etc/dstarrepeater
                echo "mmdvmTXInvert=0" >> /etc/dstarrepeater
                echo "mmdvmPTTInvert=0" >> /etc/dstarrepeater
                echo "mmdvmTXDelay=50" >> /etc/dstarrepeater
                echo "mmdvmRXLevel=100" >> /etc/dstarrepeater
                echo "mmdvmTXLevel=100" >> /etc/dstarrepeater
        fi
fi

# Download M17 Audio files if missing
if [[ ! -f /usr/local/etc/M17_Audio/se_SE.indx ]]; then
    mkdir -p /usr/local/etc/M17_Audio/
    curl --fail -o /usr/local/etc/M17_Audio/de_DE.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/de_DE.m17
    curl --fail -o /usr/local/etc/M17_Audio/de_DE.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/de_DE.indx
    curl --fail -o /usr/local/etc/M17_Audio/dk_DK.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/dk_DK.m17
    curl --fail -o /usr/local/etc/M17_Audio/dk_DK.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/dk_DK.indx
    curl --fail -o /usr/local/etc/M17_Audio/en_GB.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/en_GB.m17
    curl --fail -o /usr/local/etc/M17_Audio/en_GB.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/en_GB.indx
    curl --fail -o /usr/local/etc/M17_Audio/en_US.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/en_US.m17
    curl --fail -o /usr/local/etc/M17_Audio/en_US.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/en_US.indx
    curl --fail -o /usr/local/etc/M17_Audio/es_ES.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/es_ES.m17
    curl --fail -o /usr/local/etc/M17_Audio/es_ES.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/es_ES.indx
    curl --fail -o /usr/local/etc/M17_Audio/fr_FR.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/fr_FR.m17
    curl --fail -o /usr/local/etc/M17_Audio/fr_FR.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/fr_FR.indx
    curl --fail -o /usr/local/etc/M17_Audio/it_IT.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/it_IT.m17
    curl --fail -o /usr/local/etc/M17_Audio/it_IT.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/it_IT.indx
    curl --fail -o /usr/local/etc/M17_Audio/pl_PL.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/pl_PL.m17
    curl --fail -o /usr/local/etc/M17_Audio/pl_PL.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/pl_PL.indx
    curl --fail -o /usr/local/etc/M17_Audio/se_SE.m17 -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/se_SE.m17
    curl --fail -o /usr/local/etc/M17_Audio/se_SE.indx -s https://raw.githubusercontent.com/g4klx/M17Gateway/master/Audio/se_SE.indx    
fi

if [[ $(grep Version /etc/pistar-release | awk '{print $3}' | cut -c 1) -eq 4 ]]; then
        if [[ $(cat /etc/ircddbgateway | grep -o "xlx" | wc -l) -eq 0 ]]; then
                echo "xlxEnabled=0" >> /etc/ircddbgateway
                echo "xlxOverrideLocal=0" >> /etc/ircddbgateway
                echo "xlxHostsFileUrl=" >> /etc/ircddbgateway
        fi

        if [[ $(cat /etc/ircddbgateway | grep -o "gpsd" | wc -l) -eq 0 ]]; then
                echo "gpsdSEnabled=0" >> /etc/ircddbgateway
                echo "gpsdAddress=127.0.0.1" >> /etc/ircddbgateway
                echo "gpsdPort=2947" >> /etc/ircddbgateway
        fi

        if [[ $(cat /etc/dstarrepeater | grep -o "mmdvmRXInvert" | wc -l) -eq 0 ]]; then
                echo "mmdvmRXInvert=0" >> /etc/dstarrepeater
                echo "mmdvmTXInvert=0" >> /etc/dstarrepeater
                echo "mmdvmPTTInvert=0" >> /etc/dstarrepeater
                echo "mmdvmTXDelay=50" >> /etc/dstarrepeater
                echo "mmdvmRXLevel=100" >> /etc/dstarrepeater
                echo "mmdvmTXLevel=100" >> /etc/dstarrepeater
        fi
fi

    # M17 Staging...
    #if [[ -f /etc/m17gateway ]] ; then
    #    if [[ $( grep -m 1 'Callsign' /etc/m17gateway | sed 's/Callsign=//g') ]] ; then # test to see if m17gw *has* been configured by user
    #        rm /etc/m17gateway
    #    fi
    #fi
    # reinstall/init
    if [[ ! -f /etc/m17gateway ]] ; then
        bash /usr/local/sbin/m17gateway.service install
        touch /etc/m17gateway
    fi
    # DG-ID Staging...
    #if [[ -f /etc/dgidgateway ]] ; then
    #    if [[ $( grep -m 1 'Callsign' /etc/dgidgateway | sed 's/Callsign=//g') ]] ; then # test to see if dgidgw *has* been configured by user
    #        rm /etc/dgidgateway
    #    fi
    #fi
    # reinstall/init
    if [[ ! -f /etc/dgidgateway ]] ; then
        bash /usr/local/sbin/dgidgateway.service install
        touch /etc/dgidgateway
    fi

    if [ -f /usr/local/bin/platformDetect.sh ]; then # remove platformDetect.sh since we have a custom version in /usr/local/sbin
        rm -f /usr/local/bin/platformDetect.sh
    fi

# Fix nginx unit file
if ! [ $(cat /lib/systemd/system/nginx.service | grep -o "mkdir") ]; then
  sed -i '\/PIDFile=\/run\/nginx.pid/a ExecStartPre=\/bin\/mkdir -p \/var\/log\/nginx' /lib/systemd/system/nginx.service
	systemctl daemon-reload
	systemctl restart nginx.service
fi

if ! grep -q TIME_FORMAT /var/www/dashboard/config/config.php ; then # insert req'd constant if not found. WIll be stashed on next update :-)
    sed -i "/^date_default_timezone_set.*/i define('TIME_FORMAT', '24');" /var/www/dashboard/config/config.php 
fi

# log file perms
chown -R mmdvm:mmdvm /var/log/pi-star > /dev/null 2>&1
chmod 775 /var/log/pi-star > /dev/null 2>&1

# Update the ircDDBGateway and DSTARrepeater versions in /etc/pistar-release
sed -i "/ircddbgateway/c ircddbgateway = 20190621_W0CHP" /etc/pistar-release
sed -i "/dstarrepeater/c dstarrepeater = 20180911_W0CHP" /etc/pistar-release

# Check for gpsd
if ! [ -x "$(command -v gpsd)" ]; then
    echo "GPSd (required) not installed on hotspot. Installing now..."
    # Install GPSd
    apt-get -qq install -y libgps-dev gpsd > /dev/null 2>&1
    systemctl restart gpsd > /dev/null 2>&1
    systemctl daemon-reload > /dev/null 2>&1
    echo -e "Done\n"
fi

# Start all the services...
systemctl daemon-reload &> /dev/null # Reload systemd to account for service changes
pistar-services start > /dev/null 2>&1

exit 0
