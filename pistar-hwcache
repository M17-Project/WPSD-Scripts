#!/bin/bash

# cleanup legacy entries
if [ $(grep -c 'MMDVMHost' /etc/pistar-release) -gt 2 ]; then
    sed -i '/MMDVM/d' /etc/pistar-release
    sed -i "/Version = /a MMDVMHost = " /etc/pistar-release
fi

# bins are sometimes built in a batch...use MMDVMHost ver as Dstar bin git/date vers...
getVer=$( MMDVMHost -v | cut -d' ' -f 3- )
sed -i "/^ircddbgateway.*/c ircddbgateway = ${getVer}" /etc/pistar-release
sed -i "/^dstarrepeater.*/c dstarrepeater = ${getVer}" /etc/pistar-release
sed -i "/MMDVMHost/c MMDVMHost = ${getVer}" /etc/pistar-release

countProcs=$(grep -c ^processor /proc/cpuinfo)
if ! grep -w 'ProcNum' /etc/pistar-release > /dev/null; then
    sed -i "/Hardware = /a ProcNum = ${countProcs}" /etc/pistar-release
else
    sed -i "/ProcNum/c ProcNum = ${countProcs}" /etc/pistar-release
fi

activeIface=$(route | head -3 | tail -1 | awk '{print $8}')
if ! grep -w 'iface' /etc/pistar-release > /dev/null; then
    sed -i "/Hardware = /a iface = ${activeIface}" /etc/pistar-release
else
    sed -i "/iface/c iface = ${activeIface}" /etc/pistar-release
fi

KernelVer=`uname -r`
sed -i "/kernel/c kernel = ${KernelVer}" /etc/pistar-release

# cleanup legacy modem info
if grep -w 'Firmware' /etc/pistar-release > /dev/null; then
    sed -i '/Firmware/d' /etc/pistar-release
fi
if grep -w 'TCXO' /etc/pistar-release > /dev/null; then
    sed -i '/TCXO/d' /etc/pistar-release
fi

PlatDetect=$(/usr/local/sbin/platformDetect.sh)
if ! grep -w 'Platform' /etc/pistar-release > /dev/null; then
    sed -i "/Hardware = /a Platform = ${PlatDetect}" /etc/pistar-release
else
    sed -i "/Platform/c Platform = ${PlatDetect}" /etc/pistar-release
fi

# migrate UUID
if [ -f /etc/WPSD-release ]; then
    uuidLen=$( grep UUID /etc/pistar-release | awk '{print $3}' | wc -m > /dev/null )
    if [[ "${uuidLen}"  -gt "17" ]] ; then
        rm -f /etc/WPSD-release
        GU=$( cat /proc/cpuinfo | grep Serial | cut -d ' ' -f 2 )
        echo "UUID = $GU" >> /etc/pistar-release
    else
        echo "UUID = $UUIDck" >> /etc/pistar-release
        rm -f /etc/WPSD-release
    fi
else
    if ! grep -q UUID /etc/pistar-release ; then
        GU=$( cat /proc/cpuinfo | grep Serial | cut -d ' ' -f 2 )
        echo "UUID = $GU" >> /etc/pistar-release
    fi
fi
uuidLen=$( grep UUID /etc/pistar-release | awk '{print $3}' | wc -m > /dev/null )
if [[ "${uuidLen}"  -gt "17" ]] ; then
    GU=$( cat /proc/cpuinfo | grep Serial | cut -d ' ' -f 2 )
    sed -i "/UUID =/c\\UUID = ${GU}" /etc/pistar-release
fi
if ! [ $( grep UUID /etc/pistar-release | awk '{print $3}' > /dev/null ) ] ; then
    GU=$( cat /proc/cpuinfo | grep Serial | cut -d ' ' -f 2 )
    sed -i "/UUID =/c\\UUID = ${GU}" /etc/pistar-release
fi

# migrate callsign info to last line of /etc/pistar-release
CALL=$( grep callsign /var/www/dashboard/config/ircddblocal.php | cut -d\= -f2 | sed "s/[^[:alnum:]]//g" )
if ! grep -w 'Callsign' /etc/pistar-release > /dev/null; then
    echo "Callsign = ${CALL}" >> /etc/pistar-release
else
    sed -i "/Callsign =/c Callsign = ${CALL}" /etc/pistar-release
fi

# Cache Modem Mode
if grep -q 'Duplex=1' /etc/mmdvmhost ; then
    ModemMode="Duplex"
else
    ModemMode="Simplex"
fi
if ! grep -w 'ModemMode' /etc/pistar-release > /dev/null; then
    sed -i "/iface = /a ModemMode = ${ModemMode}" /etc/pistar-release
else
    sed -i "/ModemMode =/c ModemMode = ${ModemMode}" /etc/pistar-release
fi

# Cache modem and controller types
if [ -f '/etc/dstar-radio.mmdvmhost' ]; then
    ControllerType="MMDVM"
    ModemType=$( grep Hardware /etc/dstar-radio.mmdvmhost | sed 's/Hardware=//' )
    if ! grep -w 'ModemType' /etc/pistar-release > /dev/null; then
	sed -i "/ModemMode = /a ModemType = ${ModemType}" /etc/pistar-release
    else
	sed -i "/ModemType =/c ModemType = ${ModemType}" /etc/pistar-release
    fi
    if ! grep -w 'ControllerType' /etc/pistar-release > /dev/null; then
        sed -i "/ModemType /a ControllerType = ${ControllerType}" /etc/pistar-release
    else
        sed -i "/ControllerType =/c ControllerType = ${ControllerType}" /etc/pistar-release
    fi
fi
if [ -f '/etc/dstar-radio.dstarrepeater' ]; then
    ControllerType="DSTARrepeater"
    ModemType=$( grep Hardware /etc/dstar-radio.mmdvmhost | sed 's/Hardware=//' )
    if ! grep -w 'ModemType' /etc/pistar-release > /dev/null; then
	sed -i "/ModemMode = /a ModemType = ${ModemType}" /etc/pistar-release
    else
	sed -i "/ModemType =/c ModemType = ${ModemType}" /etc/pistar-release
    fi
    if ! grep -w 'ControllerType' /etc/pistar-release > /dev/null; then
        sed -i "/ModemType /a ControllerType = ${ControllerType}" /etc/pistar-release
    else
        sed -i "/ControllerType =/c ControllerType = ${ControllerType}" /etc/pistar-release
    fi
fi

# Remove legacy Net2 Log
if grep -w 'DMRGWnet2' /etc/pistar-release > /dev/null; then
    sed -i "/DMRGWnet2/d" /etc/pistar-release
fi

# add / update WPSD version hash to /etc/pistar-release
WPSDver=$(cat /etc/.W0CHP-PiStar-Dash.remote_version | sed 's/\..*//')
if ! grep -w 'WPSD_Ver' /etc/pistar-release > /dev/null; then
    sed -i "/Callsign =/a WPSD_Ver = ${WPSDver}" /etc/pistar-release
else
    sed -i "/WPSD_Ver/c WPSD_Ver = ${WPSDver}" /etc/pistar-release
fi

# cleanup last line..
sed -i '${/^$/d}' /etc/pistar-release

