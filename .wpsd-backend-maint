#!/bin/bash

# disable samba - perf. and sec.
if ! systemctl status smbd.service | grep masked > /dev/null 2<&1 ; then
    systemctl stop smbd > /dev/null 2<&1
    LC_ALL=C systemctl disable smbd > /dev/null 2<&1
    systemctl mask smbd > /dev/null 2<&1
fi
if ! systemctl status nmbd.service | grep masked > /dev/null 2<&1 ; then
    systemctl stop nmbd > /dev/null 2<&1
    LC_ALL=C systemctl disable nmbd > /dev/null 2<&1
    systemctl mask nmbd > /dev/null 2<&1
fi

# avahi tweaks
if grep -q 'publish-hinfo=no' /etc/avahi/avahi-daemon.conf ; then
    cp /etc/avahi/avahi-daemon.conf /etc/avahi/avahi-daemon.conf.dist
    sed -i 's/^publish-hinfo=.*/publish-hinfo=yes/g;s/^publish-workstation=.*/publish-workstation=yes/g' /etc/avahi/avahi-daemon.conf
    sed -i 's/^use-ipv6=.*/use-ipv6=no/g' /etc/avahi/avahi-daemon.conf

    # publish HTTP and SSH avahi services
    cat << EOF > /etc/avahi/services/http.service
<?xml version="1.0" standalone='no'?><!--*-nxml-*-->
<!DOCTYPE service-group SYSTEM "avahi-service.dtd">
<service-group>
<name replace-wildcards="yes">%h Pi-Star Web Interface</name>
<service>
<type>_http._tcp</type>
<port>80</port>
</service>
</service-group>
EOF
    cat << EOF > /etc/avahi/services/ssh.service
<?xml version="1.0" standalone='no'?><!--*-nxml-*-->
<!DOCTYPE service-group SYSTEM "avahi-service.dtd">
<service-group>
<name replace-wildcards="yes">%h Pi-Star SSH</name>
<service>
<type>_ssh._tcp</type>
<port>22</port>
</service>
</service-group>
EOF

    systemctl restart avahi-daemon > /dev/null 2<&1
    systemctl daemon-reload > /dev/null 2<&1
fi

# enable unatt. upgrades now that the file-system is full-time R/W:
if  systemctl status unattended-upgrades.service | grep masked > /dev/null 2<&1 ; then # previously disabled/masked....reset...
    systemctl unmask unattended-upgrades.service > /dev/null 2<&1
    dpkg-reconfigure -pmedium unattended-upgrades > /dev/null 2<&1
    # if bullseye, we need to migrate config;
    /usr/bin/lsb_release -cs | grep 'bullseye' &> /dev/null
    if [ $? == 0 ]; then
	if grep 'o=Raspbian,n=buster' /etc/apt/apt.conf.d/50unattended-upgrades > /dev/null 2<&1 ; then # use the new conf if old one is still found
	    if [ -f /etc/apt/apt.conf.d/50unattended-upgrades.ucf-dist ] ; then
		cp /etc/apt/apt.conf.d/50unattended-upgrades.ucf-dist /etc/apt/apt.conf.d/50unattended-upgrades
	    fi
	fi
    fi
    systemctl enable unattended-upgrades.service > /dev/null 2<&1
    systemctl restart unattended-upgrades.service > /dev/null 2<&1
fi
# enabled, but check if bulleye to migrate config:
/usr/bin/lsb_release -cs | grep 'bullseye' &> /dev/null
if [ $? == 0 ]; then
    if grep 'o=Raspbian,n=buster' /etc/apt/apt.conf.d/50unattended-upgrades > /dev/null 2<&1 ; then # use the new conf if old one is still found
	if [ -f /etc/apt/apt.conf.d/50unattended-upgrades.ucf-dist ] ; then
	    cp /etc/apt/apt.conf.d/50unattended-upgrades.ucf-dist /etc/apt/apt.conf.d/50unattended-upgrades
	    systemctl restart unattended-upgrades.service > /dev/null 2<&1
	fi
    fi
fi
# now remove annyong warning from unattended-upgrade outputs;
if grep 'Unattended-Upgrade::OnlyOnACPower "true";' //etc/apt/apt.conf.d/50unattended-upgrades > /dev/null 2<&1 ; then 
    sed -i 's/\/\/ Unattended-Upgrade::OnlyOnACPower "true";/Unattended-Upgrade::OnlyOnACPower "false";/g' /etc/apt/apt.conf.d/50unattended-upgrades
fi

# Add wpsd-service bash completion & remove legacy one
OLD_DEST="/usr/share/bash-completion/completions/pistar-services"
if [ ! -f $OLDDEST ] ; then
    rm -rf $OLD_DEST
fi
DEST="/usr/share/bash-completion/completions/wpsd-services"
if [ ! -f $DEST ] ; then
    echo "#!/bin/bash" > $DEST
    echo "" >> $DEST
    echo "_pistar_services()" >> $DEST
    echo "{" >> $DEST
    echo "    local cur prev words cword" >> $DEST
    echo "    _init_completion -n = || return" >> $DEST
    echo "" >> $DEST
    echo "    _expand || return 0" >> $DEST
    echo "" >> $DEST
    echo "    COMPREPLY=( \$( compgen -W 'start stop restart fullstop status' -- \"\$cur\" ) )" >> $DEST
    echo "" >> $DEST
    echo "} &&" >> $DEST
    echo "complete -F _wpsd_services wpsd-services" >> $DEST
    echo "" >> $DEST
    chown root:root $DEST
    chmod 0644 $DEST
fi

