#!/bin/bash
#
# Pi-Star Hourly Job Script W0CHP v2.2.4
#

W0CHP_DASH_BRANCH="$( git --git-dir=/var/www/dashboard/.git branch | grep '*' | awk {'print $2'} )"
versionCmd=$( git --work-tree=/usr/local/sbin --git-dir=/usr/local/sbin/.git rev-parse --short=10 HEAD )
psVer=$( grep Version /etc/pistar-release | awk '{print $3}' ) 

if [[ ! -f /etc/WPSD-release ]] || [[ $( cat /etc/WPSD-release ) == '69dee892-b82e-400e-b2bd-39e602969e94' ]] ; then
    cat /proc/sys/kernel/random/uuid > /etc/WPSD-release
fi

uuidStr=$( cat /etc/WPSD-release )

# used to radomize the cron mins below
cronMins=$(shuf -i 0-59 -n 1)

modelName=$(grep -m 1 'model name' /proc/cpuinfo | sed 's/.*: //')
hardwareField=$(grep 'Model' /proc/cpuinfo | sed 's/.*: //')
hwDeetz="${hardwareField} - ${modelName}"
uaStr="WPSD-ConnectivityCheck (Hourly-Cron [${cronMins}]) Ver.# ${psVer} ${versionCmd} (${W0CHP_DASH_BRANCH}) UUID:${uuidStr} [${hwDeetz}]"

# connectivity check
status_code=$(curl -m 3 -A "${uaStr}" --write-out %{http_code} --silent --output /dev/null "https://repo.w0chp.net/Chipster/W0CHP-PiStar-Dash.git/info/refs?service=git-upload-pack")
if [[ "$status_code" -ne 200 ]] ; then
    exit 1
fi

# Shrink NginX error log to stop it getting out of hand
echo "$(tail -500 /var/log/nginx/error.log)" > /var/log/nginx/error.log

# Clean up systemd logs
journalctl --rotate
journalctl --vacuum-time=24h
journalctl --vacuum-size=5M

# Remove extraneous PHP session files
(cd /var/lib/php*/sessions/ && rm -f \!\("sess_pistardashsess"\))

# logfile perms
chown -R mmdvm:mmdvm /var/log/pi-star
chmod 775 /var/log/pi-star

# Keep the Callsign/Name Lookup Temp files in check...helps with page/name lookup perf. (W0CHP - 12/2021)
if compgen -G "/tmp/Callsign_Name.txt*" > /dev/null; then
        if [[ $( wc -l /tmp/Callsign_Name.txt.TMP ) > "50" ]]; then
        echo "" > /tmp/Callsign_Name.txt.TMP
        echo "" > /tmp/Callsign_Name.txt
    fi
fi

# Get and cache latest W0CHP-PiStar-Dash version from remote Git repo:
gitFolder="/var/www/dashboard"
gitRemoteURL=$(git --work-tree=${gitFolder} --git-dir=${gitFolder}/.git config --get remote.origin.url)
gitBranch="$( git --git-dir=${gitFolder}/.git branch | grep '*' | awk {'print $2'} )"
gitStatusRemote=$(env GIT_HTTP_CONNECT_TIMEOUT="10" env GIT_HTTP_USER_AGENT="WPSD-UpdateCheck Version Cacher (Hourly-Cron [${cronMins}]) Ver.# ${psVer} ${versionCmd} (${W0CHP_DASH_BRANCH}) UUID:${uuidStr} [${hwDeetz}]" git ls-remote --heads ${gitRemoteURL} | grep ${gitBranch} | awk {'print $1'} | awk '{ print substr($1,1,10) }') # last pipe to awk: converts long hash to 10 chars.
echo ${gitStatusRemote} > /etc/.W0CHP-PiStar-Dash.remote_version

# Shuffle the time for the next hourly crontab job
sed -i "/cron.hourly/c ${cronMins}  *   * * *   root    mount -o remount,rw / && cd / && run-parts --report /etc/cron.hourly" /etc/crontab

# Generate /etc/motd
/usr/local/sbin/pistar-motdgen

# Update pertinent versions in /etc/pistar-release
sed -i "/ircddbgateway/c ircddbgateway = 20190621_W0CHP" /etc/pistar-release
sed -i "/dstarrepeater/c dstarrepeater = 20180911_W0CHP" /etc/pistar-release
_KernelVer=`uname -r`
_MMDVMHostVer=`MMDVMHost -v | awk '{ print $3 }'`
mmdvmHostLog="/var/log/pi-star/MMDVM-*.log"
_FWver=`grep 'MMDVM protocol version' ${mmdvmHostLog} | awk '{print $9}' | tail -1`
_TCXO=`grep 'MMDVM protocol version' ${mmdvmHostLog} | awk '{print $11}' | tail -1`
sed -i "/kernel/c kernel = $_KernelVer" /etc/pistar-release
sed -i "/MMDVMHost/c MMDVMHost = $_MMDVMHostVer" /etc/pistar-release
if ! grep -q 'Firmware' /etc/pistar-release > /dev/null; then
    sed -i "/Hardware = /a Firmware = \nTCXO = " /etc/pistar-release
    sed -i "/Firmware/c Firmware = $_FWver" /etc/pistar-release
    sed -i "/TCXO/c TCXO = $_TCXO" /etc/pistar-release
else
    sed -i "/Firmware/c Firmware = $_FWver" /etc/pistar-release
    sed -i "/TCXO/c TCXO = $_TCXO" /etc/pistar-release
fi
sed -i '${/^$/d}' /etc/pistar-release

# Mount the disk RO
/bin/sync
/bin/sync
/bin/sync
mount -o remount,ro /
mount -o remount,ro /boot
