#!/bin/bash
#
##############################################################################
#                                                                            #
#                        Pi-Star Auto Upgrade Tool                           #
#                                                                            #
#     Version 1.1, Code, Design and Development by Andy Taylor (MW0MWZ).     #
#                                                                            #
#        Make it simple to upgrade to the current version of Pi-Star.        #
#                                                                            #
##############################################################################
#
if [ "$(id -u)" != "0" ]; then
  echo -e "You need to be root to run this command...\n"
  exit 1
fi

exec 200>/var/lock/pistar-upgrade.lock || exit 1
if ! flock -n 200 ; then
  echo -e "Another instance is already running...\n"
  exit 1
fi

main_function() {
	# Get the current Modem
	if [ -f /etc/dstar-radio.mmdvmhost ]; then
		pistarModem=$(awk -F "=" '/Hardware/ {print $2}' /etc/dstar-radio.mmdvmhost)
	elif [ -f /etc/dstar-radio.dstarrepeater ]; then
		pistarModem=$(awk -F "=" '/Hardware/ {print $2}' /etc/dstar-radio.dstarrepeater)
	else
		pistarModem=Unknown
	fi

	# Get the Pi-Star Version Info
	pistarCurVersion=$(awk -F "= " '/Version/ {print $2}' /etc/pistar-release)
	# Get the hardware type, this may be important later (RPi | NanoPi | OdroidXU4)
	pistarHardware=$(awk -F "= " '/Hardware/ {print $2}' /etc/pistar-release)


	echo "Detected Pi-Star ${pistarCurVersion} running on ${pistarHardware} hardware, attached to ${pistarModem} modem..."

	case ${pistarCurVersion} in
	4.1.6)
		#sed -i 's/4.1.6/4.1.7/g' /etc/pistar-release

		# Re-create the MOTD
		#/usr/local/sbin/pistar-motdgen

		# OK we are done
		#Message="Upgraded from ${pistarCurVersion} to 4.1.7..."
		Message="You are already running the latest version..."
		#echo $Message
		#exec "$0" "$@"
                #exit 1
	;;
	*)
		Message="Somthing went very wrong, I cant tell what version I am running"
	;;
	esac

	echo $Message
	echo "Upgrade process complete, syncing disk cache..."
	/bin/sync
	/bin/sync
	/bin/sync
	echo "Finished"

	}

if [ -t 1 ]; then
  # run via terminal, only output to screen
  main_function
else
  # if not run via terminal, log everything into a log file
  main_function >> /var/log/pi-star/pi-star_upgrade.log 2>&1
fi

exit 0
