<?php
$host = 'cdn.w0chp.net';
$port = 443;

$fp = @stream_socket_client("ssl://$host:$port", $errno, $errstr, 3);
if (!$fp) {
    die();
}

$release_file = '/etc/pistar-release';
$release = parse_ini_file($release_file);

$os = exec('lsb_release -cs');

$uuid = $release['UUID'];
$kernel = $release['kernel'];
$hardware = $release['Hardware'];
$platform = $release['Platform'];
$iface = $release['iface'];
$modem_mode = $release['ModemMode'];
$modem_type = $release['ModemType'];
$controller_type = $release['ControllerType'];
$callsign = $release['Callsign'];
$wpsd_ver = $release['WPSD_Ver'];
$display = exec("awk -F'=' '/\[General\]/{flag=1} flag && /Display/{print $2; flag=0}' /etc/mmdvmhost");

$data = array(
    'UUID' => $uuid,
    'kernel' => $kernel,
    'Hardware' => $hardware,
    'Platform' => $platform,
    'iface' => $iface,
    'ModemMode' => $modem_mode,
    'ModemType' => $modem_type,
    'ControllerType' => $controller_type,
    'Display' => $display,
    'Callsign' => $callsign,
    'WPSD_Ver' => $wpsd_ver,
    'os' => $os
);

$retry_limit = 10;
$retry_count = 0;

$options = array(
    'http' => array(
        'header'  => "Content-type: application/x-www-form-urlencoded\r\n" .
                     "User-Agent: WPSD Diags - UUID:$uuid CALL:$callsign\r\n",
        'method'  => 'POST',
        'content' => http_build_query($data),
    ),
);

function isHttpCodeSuccessful($http_code) {
    return ($http_code >= 200 && $http_code < 400);
}

do {
    $context  = stream_context_create($options);
    $result = @file_get_contents("https://$host/diags/", false, $context);

    if ($result !== false) {
        $http_status = explode(' ', $http_response_header[0])[1];
        $http_code = intval($http_status);

        if (isHttpCodeSuccessful($http_code)) {
            // Success, exit the loop.
            break;
        } else {
            // HTTP error, retry up to $retry_limit times.
            $retry_count++;
            if ($retry_count >= $retry_limit) {
                // Max retries exceeded, exit the loop.
                break;
            }
            sleep(10);
        }
    } else {
        // Something went wrong, retry up to $retry_limit times.
        $retry_count++;
        if ($retry_count >= $retry_limit) {
            // Max retries exceeded, exit the loop.
            break;
        }
        sleep(10);
    }
} while (true);

if ($retry_count == $retry_limit) {
    die();
} else {
    // Success
    echo $result;
    exit;
}

?>
