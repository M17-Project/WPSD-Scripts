#!/usr/bin/env bash

# privilege check
if [ "$(id -u)" != "0" ]; then
  echo -e "You need to be root to run this command...\n"
  exit 1
fi

if grep -q W0CHP /var/www/dashboard/config/version.php ; then
    RUNNING_W0CHP=1
fi

function _rw() {
    mount -o remount,rw /
}

function DisableFirewall() {
    if [[ $RUNNING_W0CHP ]]; then
        _rw
        rm /usr/local/sbin/pistar-firewall
        ln -s /usr/local/sbin/pistar-firewall.disabled /usr/local/sbin/pistar-firewall
        bash /usr/local/sbin/pistar-firewall > /dev/null 2<&1
        if [ -t 1 ]; then
            echo "Firewall Disabled"
        fi
    else
        echo "ERROR: You must perform the full W0CHP-PiStar-Dash installation before disabling the firewall!"
        exit 1
    fi
}

function EnableFirewall() {
    if [[ $RUNNING_W0CHP ]]; then
        _rw
        rm /usr/local/sbin/pistar-firewall
        ln -s /usr/local/sbin/pistar-firewall.enabled /usr/local/sbin/pistar-firewall
        bash /usr/local/sbin/pistar-firewall > /dev/null 2<&1
        if [ -t 1 ]; then
            echo "Firewall Enabled"
        fi
    else
        echo "ERROR: You must perform the full W0CHP-PiStar-Dash installation before (re-)enabling the firewall!"
        exit 1
    fi
}

function DisableCron() {
    _rw
    systemctl stop cron.service > /dev/null 2<&1
    systemctl disable cron.service > /dev/null 2<&1
    systemctl mask cron.service > /dev/null 2<&1
        if [ -t 1 ]; then
            echo "Cron Disabled"
        fi
}

function EnableCron() {
    _rw
    systemctl unmask cron.service > /dev/null 2<&1
    systemctl enable cron.service > /dev/null 2<&1
    systemctl start cron.service > /dev/null 2<&1
        if [ -t 1 ]; then
            echo "Cron Enabled"
        fi
}

function DisplayHelp() {
    echo "`basename $0` usage:"
    echo ""
    echo "  -h,   --help                     Display this help text."
    echo "  -dfw  --disable-firewall         Disable Pi-Star firewall rules and allow all traffic"
    echo "  -efw  --enable-firewall          Enable Pi-Star firewall rules to defaults and only allow required traffic"
    echo "  -dc,  --disable-cron             Stop the Cron daemon"
    echo "  -ec,  --enable-cron              Start the Cron daemon"
    echo ""
}


if [ $# -eq 0 ]; then
    DisplayHelp
    exit 1
fi

## Parse command line
while [[ $# -gt 0 ]]; do
    key="$1"

    case $key in
    "-dfw" | "--disable-firewall")
        DisableFirewall
        shift
        ;;

    "-efw" | "--enable-firewall")
        EnableFirewall
        shift
        ;;

    "-dc" | "--disable-cron")
        DisableCron
        shift
        ;;

    "-ec" | "--enable-cron")
        EnableCron
        shift
        ;;

    "-h" | "--help")
        DisplayHelp
        shift
        ;;

    *)
        DisplayHelp;
        exit 1
        ;;
    esac
done

exit 0
